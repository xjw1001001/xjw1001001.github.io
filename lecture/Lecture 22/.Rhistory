# Define characters
four_star_characters <- c("Arlan", "Asta", "Dan Heng", "Herta", "Hook", "March 7th", "Natasha", "Pela", "Qingque", "Sampo", "Serval", "Sushang", "Tingyun")
five_star_characters <- c("Bailu", "Bronya", "Clara", "Gepard", "Himeko", "Seele", "Welt", "Yanqing")
rate_up_five_star_char <- "Seele"
rate_up_four_star_chars <- c("Natasha", "Hook", "Pela")
# Initialize counters
pity_counter_five_star <- 0 # counts how many pulls no 5 star characters
pity_counter_four_star_plus <- 0 # counts how many pulls no 4+ star characters
last_five_star_not_up <- FALSE # counts whether the last 5 star character is not the up character
pull_results <- vector(length = n_pulls)
for(pull in 1:n_pulls) {
# generate a random number to determine the pull result
rand <- runif(1)
# condition for a 5 star character
# either this pull achieves 5 star rate or you haven't got 5 star in last 89 pulls
if (rand <= five_star_rate || pity_counter_five_star >= 89) {
# Lucky, got 5 star, so reset the counter.
pity_counter_five_star <- 0
pity_counter_four_star_plus <- 0
# condition for a 5 star up character
# either this pull achieves 5 star up rate or you the last 5 star is not the up character
if (rand <= five_star_rate * rate_up_five_star || last_five_star_not_up == TRUE) {
char <- rate_up_five_star_char
} else {
# randomly choose 1 non-up 5 star character
char <- sample(five_star_characters[five_star_characters != rate_up_five_star_char], 1)
# This 5 star is not up character
pity_counter_four_star_plus <- TRUE
}
}
# When it's not 5 star character, but it's 4 star character
# (five_star_rate< rand <= (five_star_rate + four_star_rate))
else if (rand <= (five_star_rate + four_star_rate) || pity_counter_four_star_plus >= 9) {
pity_counter_four_star_plus <- 0
# condition for a 4 star up character
if (rand <= (five_star_rate + four_star_rate * rate_up_four_star)) {
char <- sample(rate_up_four_star_chars, 1)
} else {
char <- sample(four_star_characters[!four_star_characters %in% rate_up_four_star_chars], 1)
}
} else {
char <- "3★ light cone"
}
pull_results[pull] <- char
}
# Display pull results
table(pull_results)
# Save pull results to a CSV file
#write.csv(data.frame(pull_results), "gacha_pull_results.csv", row.names = FALSE)
# Gacha parameters
n_pulls <- 360
five_star_rate <- 0.006
four_star_rate <- 0.051
rate_up_five_star <- 0.5
rate_up_four_star <- 0.5
# Define characters
four_star_characters <- c("Arlan", "Asta", "Dan Heng", "Herta", "Hook", "March 7th", "Natasha", "Pela", "Qingque", "Sampo", "Serval", "Sushang", "Tingyun")
five_star_characters <- c("Bailu", "Bronya", "Clara", "Gepard", "Himeko", "Seele", "Welt", "Yanqing")
rate_up_five_star_char <- "Seele"
rate_up_four_star_chars <- c("Natasha", "Hook", "Pela")
# Initialize counters
pity_counter_five_star <- 0 # counts how many pulls no 5 star characters
pity_counter_four_star_plus <- 0 # counts how many pulls no 4+ star characters
last_five_star_not_up <- FALSE # counts whether the last 5 star character is not the up character
pull_results <- vector(length = n_pulls)
for(pull in 1:n_pulls) {
# generate a random number to determine the pull result
rand <- runif(1)
# condition for a 5 star character
# either this pull achieves 5 star rate or you haven't got 5 star in last 89 pulls
if (rand <= five_star_rate || pity_counter_five_star >= 89) {
# Lucky, got 5 star, so reset the counter.
pity_counter_five_star <- 0
pity_counter_four_star_plus <- 0
# condition for a 5 star up character
# either this pull achieves 5 star up rate or you the last 5 star is not the up character
if (rand <= five_star_rate * rate_up_five_star || last_five_star_not_up == TRUE) {
char <- rate_up_five_star_char
} else {
# randomly choose 1 non-up 5 star character
char <- sample(five_star_characters[five_star_characters != rate_up_five_star_char], 1)
# This 5 star is not up character
last_five_star_not_up <- TRUE
}
}
# When it's not 5 star character, but it's 4 star character
# (five_star_rate< rand <= (five_star_rate + four_star_rate))
else if (rand <= (five_star_rate + four_star_rate) || pity_counter_four_star_plus >= 9) {
pity_counter_four_star_plus <- 0
# condition for a 4 star up character
if (rand <= (five_star_rate + four_star_rate * rate_up_four_star)) {
char <- sample(rate_up_four_star_chars, 1)
} else {
char <- sample(four_star_characters[!four_star_characters %in% rate_up_four_star_chars], 1)
}
} else {
char <- "3★ light cone"
}
pull_results[pull] <- char
}
# Display pull results
table(pull_results)
# Save pull results to a CSV file
#write.csv(data.frame(pull_results), "gacha_pull_results.csv", row.names = FALSE)
# Gacha parameters
n_pulls <- 1000
five_star_rate <- 0.006
four_star_rate <- 0.051
rate_up_five_star <- 0.5
rate_up_four_star <- 0.5
# Define characters
four_star_characters <- c("Arlan", "Asta", "Dan Heng", "Herta", "Hook", "March 7th", "Natasha", "Pela", "Qingque", "Sampo", "Serval", "Sushang", "Tingyun")
five_star_characters <- c("Bailu", "Bronya", "Clara", "Gepard", "Himeko", "Seele", "Welt", "Yanqing")
rate_up_five_star_char <- "Seele"
rate_up_four_star_chars <- c("Natasha", "Hook", "Pela")
# Initialize counters
pity_counter_five_star <- 0 # counts how many pulls no 5 star characters
pity_counter_four_star_plus <- 0 # counts how many pulls no 4+ star characters
last_five_star_not_up <- FALSE # counts whether the last 5 star character is not the up character
pull_results <- vector(length = n_pulls)
for(pull in 1:n_pulls) {
# generate a random number to determine the pull result
rand <- runif(1)
# condition for a 5 star character
# either this pull achieves 5 star rate or you haven't got 5 star in last 89 pulls
if (rand <= five_star_rate || pity_counter_five_star >= 89) {
# Lucky, got 5 star, so reset the counter.
pity_counter_five_star <- 0
pity_counter_four_star_plus <- 0
# condition for a 5 star up character
# either this pull achieves 5 star up rate or you the last 5 star is not the up character
if (rand <= five_star_rate * rate_up_five_star || last_five_star_not_up == TRUE) {
char <- rate_up_five_star_char
} else {
# randomly choose 1 non-up 5 star character
char <- sample(five_star_characters[five_star_characters != rate_up_five_star_char], 1)
# This 5 star is not up character
last_five_star_not_up <- TRUE
}
}
# When it's not 5 star character, but it's 4 star character
# (five_star_rate< rand <= (five_star_rate + four_star_rate))
else if (rand <= (five_star_rate + four_star_rate) || pity_counter_four_star_plus >= 9) {
pity_counter_four_star_plus <- 0
# condition for a 4 star up character
if (rand <= (five_star_rate + four_star_rate * rate_up_four_star)) {
char <- sample(rate_up_four_star_chars, 1)
} else {
char <- sample(four_star_characters[!four_star_characters %in% rate_up_four_star_chars], 1)
}
} else {
char <- "3★ light cone"
}
pull_results[pull] <- char
}
# Display pull results
table(pull_results)
# Save pull results to a CSV file
#write.csv(data.frame(pull_results), "gacha_pull_results.csv", row.names = FALSE)
starRail_pull = function(n_pulls <- 1000){
starRail_pull = function(n_pulls = 1000){
# Gacha parameters
five_star_rate <- 0.006
four_star_rate <- 0.051
rate_up_five_star <- 0.5
rate_up_four_star <- 0.5
# Define characters
four_star_characters <- c("Arlan", "Asta", "Dan Heng", "Herta", "Hook",
"March 7th", "Natasha", "Pela", "Qingque", "Sampo",
"Serval", "Sushang", "Tingyun")
five_star_characters <- c("Bailu", "Bronya", "Clara", "Gepard", "Himeko", "Seele", "Welt", "Yanqing")
rate_up_five_star_char <- "Seele"
rate_up_four_star_chars <- c("Natasha", "Hook", "Pela")
# Initialize counters
pity_counter_five_star <- 0 # counts how many pulls no 5 star characters
pity_counter_four_star_plus <- 0 # counts how many pulls no 4+ star characters
last_five_star_not_up <- FALSE # counts whether the last 5 star character is not the up character
pull_results <- vector(length = n_pulls)
star_results <- vector(length = n_pulls)
for(pull in 1:n_pulls) {
# generate a random number to determine the pull result
rand <- runif(1)
# condition for a 5 star character
# either this pull achieves 5 star rate or you haven't got 5 star in last 89 pulls
if (rand <= five_star_rate || pity_counter_five_star >= 89) {
# Lucky, got 5 star, so reset the counter.
pity_counter_five_star <- 0
pity_counter_four_star_plus <- 0
# condition for a 5 star up character
# either this pull achieves 5 star up rate or you the last 5 star is not the up character
if (rand <= five_star_rate * rate_up_five_star || last_five_star_not_up == TRUE) {
char <- rate_up_five_star_char
star <- 5
} else {
# randomly choose 1 non-up 5 star character
char <- sample(five_star_characters[five_star_characters != rate_up_five_star_char], 1)
star <- 5
# This 5 star is not up character
last_five_star_not_up <- TRUE
}
}
# When it's not 5 star character, but it's 4 star character
# (five_star_rate< rand <= (five_star_rate + four_star_rate))
else if (rand <= (five_star_rate + four_star_rate) || pity_counter_four_star_plus >= 9) {
pity_counter_four_star_plus <- 0
# condition for a 4 star up character
if (rand <= (five_star_rate + four_star_rate * rate_up_four_star)) {
char <- sample(rate_up_four_star_chars, 1)
star <- 4
} else {
char <- sample(four_star_characters[!four_star_characters %in% rate_up_four_star_chars], 1)
star <- 4
}
} else {
char <- "3★ light cone"
star <- 3
}
pull_results[pull] <- char
star_results[pull] <- star
}
table(pull_results)
return(data.frame(result = pull_results, star = star_results, index = 1:n_pulls))
}
# Display pull results
table(pull_results)
# Save pull results to a CSV file
#write.csv(data.frame(pull_results), "gacha_pull_results.csv", row.names = FALSE)
starRail_pull(10)
df = starRail_pull(10)
df = starRail_pull(10)
# Don't change anything here
knitr::opts_chunk$set(
comment = "", prompt = F, message=F, warning = F
)
# Load necessary libraries
library(tidyverse)
starRail_pull = function(n_pulls = 1000){
# Gacha parameters
five_star_rate <- 0.006
four_star_rate <- 0.051
rate_up_five_star <- 0.5
rate_up_four_star <- 0.5
# Define characters
four_star_characters <- c("Arlan", "Asta", "Dan Heng", "Herta", "Hook",
"March 7th", "Natasha", "Pela", "Qingque", "Sampo",
"Serval", "Sushang", "Tingyun")
five_star_characters <- c("Bailu", "Bronya", "Clara", "Gepard", "Himeko", "Seele", "Welt", "Yanqing")
rate_up_five_star_char <- "Seele"
rate_up_four_star_chars <- c("Natasha", "Hook", "Pela")
# Initialize counters
pity_counter_five_star <- 0 # counts how many pulls no 5 star characters
pity_counter_four_star_plus <- 0 # counts how many pulls no 4+ star characters
last_five_star_not_up <- FALSE # counts whether the last 5 star character is not the up character
pull_results <- vector(length = n_pulls)
star_results <- vector(length = n_pulls)
for(pull in 1:n_pulls) {
# generate a random number to determine the pull result
rand <- runif(1)
# condition for a 5 star character
# either this pull achieves 5 star rate or you haven't got 5 star in last 89 pulls
if (rand <= five_star_rate || pity_counter_five_star >= 89) {
# Lucky, got 5 star, so reset the counter.
pity_counter_five_star <- 0
pity_counter_four_star_plus <- 0
# condition for a 5 star up character
# either this pull achieves 5 star up rate or you the last 5 star is not the up character
if (rand <= five_star_rate * rate_up_five_star || last_five_star_not_up == TRUE) {
char <- rate_up_five_star_char
star <- 5
} else {
# randomly choose 1 non-up 5 star character
char <- sample(five_star_characters[five_star_characters != rate_up_five_star_char], 1)
star <- 5
# This 5 star is not up character
last_five_star_not_up <- TRUE
}
}
# When it's not 5 star character, but it's 4 star character
# (five_star_rate< rand <= (five_star_rate + four_star_rate))
else if (rand <= (five_star_rate + four_star_rate) || pity_counter_four_star_plus >= 9) {
pity_counter_four_star_plus <- 0
# condition for a 4 star up character
if (rand <= (five_star_rate + four_star_rate * rate_up_four_star)) {
char <- sample(rate_up_four_star_chars, 1)
star <- 4
} else {
char <- sample(four_star_characters[!four_star_characters %in% rate_up_four_star_chars], 1)
star <- 4
}
} else {
char <- "3★ light cone"
star <- 3
}
pull_results[pull] <- char
star_results[pull] <- star
}
print(table(pull_results))
return(data.frame(result = pull_results, star = star_results, index = 1:n_pulls))
}
# Save pull results to a CSV file
#write.csv(data.frame(pull_results), "gacha_pull_results.csv", row.names = FALSE)
df = starRail_pull(10)
df = starRail_pull(10)
df = starRail_pull(10)
df = starRail_pull(10)
df = starRail_pull(10)
starRail_pull = function(n_pulls = 1000){
# Gacha parameters
five_star_rate <- 0.006
four_star_rate <- 0.051
rate_up_five_star <- 0.5
rate_up_four_star <- 0.5
# Define characters
four_star_characters <- c("Arlan", "Asta", "Dan Heng", "Herta", "Hook",
"March 7th", "Natasha", "Pela", "Qingque", "Sampo",
"Serval", "Sushang", "Tingyun")
five_star_characters <- c("Bailu", "Bronya", "Clara", "Gepard", "Himeko", "Seele", "Welt", "Yanqing")
rate_up_five_star_char <- "Seele"
rate_up_four_star_chars <- c("Natasha", "Hook", "Pela")
# Initialize counters
pity_counter_five_star <- 0 # counts how many pulls no 5 star characters
pity_counter_four_star_plus <- 0 # counts how many pulls no 4+ star characters
last_five_star_not_up <- FALSE # counts whether the last 5 star character is not the up character
pull_results <- vector(length = n_pulls)
star_results <- vector(length = n_pulls)
for(pull in 1:n_pulls) {
# generate a random number to determine the pull result
rand <- runif(1)
pity_counter_four_star_plus <- 1 + pity_counter_four_star_plus
pity_counter_five_star <- 1 + pity_counter_five_star
# condition for a 5 star character
# either this pull achieves 5 star rate or you haven't got 5 star in last 89 pulls
if (rand <= five_star_rate || pity_counter_five_star >= 90) {
# Lucky, got 5 star, so reset the counter.
pity_counter_five_star <- 0
pity_counter_four_star_plus <- 0
# condition for a 5 star up character
# either this pull achieves 5 star up rate or you the last 5 star is not the up character
if (rand <= five_star_rate * rate_up_five_star || last_five_star_not_up == TRUE) {
char <- rate_up_five_star_char
star <- 5
} else {
# randomly choose 1 non-up 5 star character
char <- sample(five_star_characters[five_star_characters != rate_up_five_star_char], 1)
star <- 5
# This 5 star is not up character
last_five_star_not_up <- TRUE
}
}
# When it's not 5 star character, but it's 4 star character
# (five_star_rate< rand <= (five_star_rate + four_star_rate))
else if (rand <= (five_star_rate + four_star_rate) || pity_counter_four_star_plus >= 10) {
pity_counter_four_star_plus <- 0
# condition for a 4 star up character
if (rand <= (five_star_rate + four_star_rate * rate_up_four_star)) {
char <- sample(rate_up_four_star_chars, 1)
star <- 4
} else {
char <- sample(four_star_characters[!four_star_characters %in% rate_up_four_star_chars], 1)
star <- 4
}
} else {
char <- "3★ light cone"
star <- 3
}
pull_results[pull] <- char
star_results[pull] <- star
}
print(table(pull_results))
return(data.frame(result = pull_results, star = star_results, index = 1:n_pulls))
}
# Save pull results to a CSV file
#write.csv(data.frame(pull_results), "gacha_pull_results.csv", row.names = FALSE)
df = starRail_pull(10)
df = starRail_pull(10)
df = starRail_pull(10)
df = starRail_pull(10)
df = starRail_pull(10)
df = starRail_pull(10)
df = starRail_pull(10)
df = starRail_pull(10)
df = starRail_pull(10)
df = starRail_pull(10)
df = starRail_pull(10)
df = starRail_pull(10)
df = starRail_pull(10)
df = starRail_pull(10)
df = starRail_pull(10)
df = starRail_pull(10)
set.seed(1245)
df = starRail_pull(10)
set.seed(12451)
df = starRail_pull(10)
set.seed(12452)
df = starRail_pull(10)
df = starRail_pull(10)
df = starRail_pull(10)
df = starRail_pull(10)
df = starRail_pull(10)
df = starRail_pull(10)
df = starRail_pull(10)
df = starRail_pull(10)
df = starRail_pull(10)
df = starRail_pull(10)
df = starRail_pull(10)
df = starRail_pull(10)
df = starRail_pull(10)
df = starRail_pull(10)
df = starRail_pull(10)
df = starRail_pull(10)
df = starRail_pull(10)
df = starRail_pull(10)
df = starRail_pull(10)
df = starRail_pull(10)
df = starRail_pull(10)
df = starRail_pull(10)
df = starRail_pull(10)
df = starRail_pull(10)
df = starRail_pull(10)
df = starRail_pull(10)
df = starRail_pull(10)
df = starRail_pull(80)
df = starRail_pull(80)
df = starRail_pull(80)
df = starRail_pull(80)
df = starRail_pull(80)
df = starRail_pull(80)
df = starRail_pull(80)
df = starRail_pull(80)
df = starRail_pull(80)
print(table(df$star))
df = starRail_pull(80)
print(table(df$star))
df = starRail_pull(80)
print(table(df$star))
df = starRail_pull(80)
print(table(df$star))
df = starRail_pull(80)
print(table(df$star))
df = starRail_pull(80)
print(table(df$star))
df = starRail_pull(80)
print(table(df$star))
df = starRail_pull(80)
print(table(df$star))
df = starRail_pull(80)
print(table(df$star))
df = starRail_pull(80)
print(table(df$star))
df = starRail_pull(80)
print(table(df$star))
df = starRail_pull(80)
print(table(df$star))
df = starRail_pull(80)
print(table(df$star))
df = starRail_pull(80)
print(table(df$star))
df = starRail_pull(80)
print(table(df$star))
df = starRail_pull(80)
print(table(df$star))
df = starRail_pull(80)
print(table(df$star))
df = starRail_pull(80)
print(table(df$star))
df = starRail_pull(80)
print(table(df$star))
df = starRail_pull(80)
print(table(df$star))
df = starRail_pull(80)
print(table(df$star))
df = starRail_pull(80)
print(table(df$star))
80 * 0.006
df = starRail_pull(80)
print(table(df$star))
df = starRail_pull(80)
print(table(df$star))
df = starRail_pull(80)
print(table(df$star))
df = starRail_pull(80)
print(table(df$star))
df = starRail_pull(80)
print(table(df$star))
df = starRail_pull(80)
print(table(df$star))
df = starRail_pull(80)
print(table(df$star))
df = starRail_pull(80)
print(table(df$star))
df = starRail_pull(80)
print(table(df$star))
df = starRail_pull(80)
print(table(df$star))
df = starRail_pull(80)
print(table(df$star))
df = starRail_pull(80)
print(table(df$star))
df = starRail_pull(80)
print(table(df$star))
df = starRail_pull(80)
print(table(df$star))
df = starRail_pull(80)
print(table(df$star))
df = starRail_pull(80)
print(table(df$star))
df = starRail_pull(80)
print(table(df$star))
df = starRail_pull(80)
print(table(df$star))
df = starRail_pull(80)
print(table(df$star))
