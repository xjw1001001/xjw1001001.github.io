the_table <- webpage %>%
html_nodes(table_path) %>%
html_text()
the_table
library(rvest)
url <- "https://en.wikipedia.org/wiki/World_population"
webpage <- read_html(url)
table_path = "h3+ .jquery-tablesorter td"
the_table <- webpage %>%
html_nodes(table_path) %>%
html_text()
the_table
library(rvest)
url <- "https://en.wikipedia.org/wiki/World_population"
webpage <- read_html(url)
table_path = "h3+ .jquery-tablesorter th , h3+ .jquery-tablesorter td"
the_table <- webpage %>%
html_nodes(table_path) %>%
html_text()
the_table
library(rvest)
url <- "https://en.wikipedia.org/wiki/World_population"
webpage <- read_html(url)
library(rvest)
url <- "https://en.wikipedia.org/wiki/World_population"
webpage <- read_html(url)
table_path = "h3+ .jquery-tablesorter td , h3+ .jquery-tablesorter th"
the_table <- webpage %>%
html_nodes(table_path) %>%
html_text()
the_table
library(rvest)
url <- "https://en.wikipedia.org/wiki/World_population"
webpage <- read_html(url)
table_path = '//h3+//*[contains(concat( " ", @class, " " ), concat( " ", "jquery-tablesorter", " " ))]//td | //h3+//*[contains(concat( " ", @class, " " ), concat( " ", "jquery-tablesorter", " " ))]//th'
the_table <- webpage %>%
html_nodes(xpath = table_path) %>%
html_text()
library(rvest)
url <- "https://en.wikipedia.org/wiki/World_population"
webpage <- read_html(url)
table_path = "h3+ .jquery-tablesorter td , th+ td , .jquery-tablesorter tbody th"
the_table <- webpage %>%
html_nodes(table_path) %>%
html_text()
the_table
library(rvest)
url <- "https://en.wikipedia.org/wiki/World_population"
webpage <- read_html(url)
table_path = "h3+ .jquery-tablesorter td , h3+ .jquery-tablesorter th"
the_table <- webpage %>%
html_nodes(table_path) %>%
html_text()
the_table
library(rvest)
url <- "https://en.wikipedia.org/wiki/World_population"
webpage <- read_html(url)
table_path = "h3+ .jquery-tablesorter td , h3+ .jquery-tablesorter tbody th"
the_table <- webpage %>%
html_nodes(table_path) %>%
html_text()
the_table
table_path = "h3+ .jquery-tablesorter td , h3+ .jquery-tablesorter tbody th"
the_table <- webpage %>%
html_nodes(table_path) %>%
html_text()
the_table
table_path = "h3+ .jquery-tablesorter td"
the_table <- webpage %>%
html_nodes(table_path) %>%
html_text()
the_table
table_path = "h3+ .jquery-tablesorter th+ td , h3+ .jquery-tablesorter td:nth-child(4)"
the_table <- webpage %>%
html_nodes(table_path) %>%
html_text()
the_table
table_path = ".tright+ .jquery-tablesorter td , .tright+ .jquery-tablesorter .headerSort"
the_table <- webpage %>%
html_nodes(table_path) %>%
html_text()
the_table
table_path = ".tright+ .jquery-tablesorter td:nth-child(1) , .tright+ .jquery-tablesorter td~ td+ td , .tright+ .jquery-tablesorter td a , .tright+ .jquery-tablesorter .headerSort"
the_table <- webpage %>%
html_nodes(table_path) %>%
html_text()
the_table
table_path = "p:nth-child(86)"
the_table <- webpage %>%
html_nodes(table_path) %>%
html_text()
the_table
table_path = ".ambox-notice+ .jquery-tablesorter th~ td , .ambox-notice+ .jquery-tablesorter tbody th , .jquery-tablesorter:nth-child(95) .headerSort"
the_table <- webpage %>%
html_nodes(table_path) %>%
html_text()
the_table
table_path = '//h3+//*[contains(concat( " ", @class, " " ), concat( " ", "jquery-tablesorter", " " ))]//th | //h3+//*[contains(concat( " ", @class, " " ), concat( " ", "jquery-tablesorter", " " ))]//td'
the_table <- webpage %>%
html_elements(xpath = table_path) %>%
html_text()
table_path = 'h3+ .jquery-tablesorter th , h3+ .jquery-tablesorter td'
the_table <- webpage %>%
html_elements(css =  table_path) %>%
html_text()
the_table
webpage %>%
html_elements(css =  table_path)
rlang
webpage %>%
html_elements("wikitable sortable jquery-tablesorter")
webpage %>%
html_elements(CSS = "wikitable sortable jquery-tablesorter")
webpage %>%
html_elements("table.sortable")
webpage %>%
html_elements("table.sortable jquery-tablesorter")
webpage %>%
html_elements("table.sortable")
webpage %>%
html_elements("table.jquery-tablesorter")
webpage %>%
html_elements("table.sortable")
library(rvest)
url <- "https://www.bls.gov/news.release/cpi.t01.htm"
webpage <- read_html(url)
library(rvest)
url <- "https://www.bls.gov/news.release/cpi.t01.htm"
webpage <- read_html(url)
library(rvest)
url <- "https://en.wikipedia.org/wiki/Gold"
webpage <- read_html(url)
table_path = '.jquery-tablesorter td , .headerSort'
the_table <- webpage %>%
html_elements(table_path) %>%
html_text()
webpage %>%
html_elements(table_path)
table_path = '.jquery-tablesorter td'
the_table <- webpage %>%
html_elements(table_path) %>%
html_text()
webpage %>%
html_elements(table_path)
url <- "https://en.wikipedia.org/wiki/World_population"
ten_most_df <- read_html(url)
ten_most_populous <- ten_most_df %>%
html_nodes(xpath="/html/body/div[3]/div[3]/div[5]/div[1]/table[4]") %>% html_table()
ten_most_populous
ten_most_df
url <- "https://en.wikipedia.org/wiki/World_population"
ten_most_df <- read_html(url)
ten_most_populous <- ten_most_df %>%
html_nodes(xpath="/html/body/div[3]/div[3]/div[5]/div[1]/table[4]") %>% html_table()
url <- "https://en.wikipedia.org/wiki/World_population"
ten_most_df <- read_html(url)
ten_most_populous <- ten_most_df %>%
html_nodes(xpath="/html/body/div[3]/div[3]/div[5]/div[1]/table[4]") %>% html_table()
ten_most_populous
url <- "https://en.wikipedia.org/wiki/World_population"
ten_most_df <- read_html(url)
ten_most_populous <- ten_most_df %>%
html_nodes(xpath="/html/body/div[3]/div[3]/div[5]/div[1]/table[4]")
ten_most_populous
webpage %>% html_nodes("table")
webpage %>% html_nodes("table")
len(webpage %>% html_nodes("table"))
length(webpage %>% html_nodes("table"))
knitr::include_graphics("1.png")
knitr::include_graphics("1.png")
knitr::include_graphics("2.png")
?include_graphics
knitr::include_graphics("1.png", dpi = 200)
knitr::include_graphics("2.png", dpi = 320)
knitr::include_graphics("3.png", dpi = 320)
knitr::include_graphics("4.png", dpi = 320)
webpage %>% html_nodes("#mw-content-text > div.mw-parser-output > table:nth-child(65)")
webpage %>% html_nodes("table:nth-child(65)")
webpage %>% html_nodes('//*[@id="mw-content-text"]/div[1]/table[5]')
webpage %>% html_nodes(xpath = '//*[@id="mw-content-text"]/div[1]/table[5]')
webpage %>% html_elements(xpath = '//*[@id="mw-content-text"]/div[1]/table[5]')
webpage
webpage %>% html_elements("#mw-content-text > div.mw-parser-output > table:nth-child(65)")
webpage %>% html_elements("#mw-content-text > div.mw-parser-output > table:nth-child(65) > thead")
?html_elements
webpage %>% html_element("#mw-content-text > div.mw-parser-output > table:nth-child(65) > thead")
webpage %>% html_elements("nth-child(65)")
webpage %>% html_nodes("table")[2]
xaringanExtra::use_xaringan_extra(c("tile_view", "animate_css", "tachyons"))
xaringanExtra::use_panelset()
knitr::opts_chunk$set(
comment = "",eval = TRUE,fig.retina = 2, message=F, warning = F, fig.height = 4.5
)
library(dplyr)
library(ggplot2)
library(tidyverse)
library(rvest)
url <- "https://en.wikipedia.org/wiki/World_population"
webpage <- read_html(url)
webpage %>% html_nodes("table")[2]
webpage
webpage %>% html_nodes("table")
library(httr)
library(xml2)
library(rvest)
res <- GET("http://www.racingpost.com/greyhounds/result_by_meeting_full.sd",
query=list(r_date="2015-12-26",
meeting_id=18))
doc <- read_html(content(res, as="text"))
library(httr)
library(xml2)
library(rvest)
res <- GET("https://en.wikipedia.org/wiki/World_population",
query=list(r_date="2023-06-23",
meeting_id=18))
doc <- read_html(content(res, as="text"))
doc
doc %>% html_elements("#mw-content-text > div.mw-parser-output > table:nth-child(65) > thead")
doc %>% html_elements("table")
doc %>% html_elements("table")[10]
doc %>% html_elements("wikitable sortable jquery-tablesorter")
doc %>% html_elements("wikitable sortable")
doc %>% html_elements("sortable")
doc %>% html_elements("table")
doc %>% html_elements("wikitable")
doc %>% html_elements(".wikitable")
doc %>% html_elements(".wikitable sortable")
doc %>% html_elements(".wikitable .sortable")
doc %>% html_elements(".sortable")
doc %>% html_elements(".wikitable&.sortable")
doc %>% html_elements(".wikitable.sortable")
webpage %>% html_elements(".wikitable.sortable.jquery-tablesorter")
webpage %>% html_elements(".wikitable.sortable")
webpage %>% html_elements(".wikitable.sortable") # You need to replace space by .
doc %>% html_elements(".wikitable.sortable")
webpage %>% html_elements(".wikitable.sortable.jquery-tablesorter")
webpage %>% html_elements(".wikitable.sortable") %>% `[[`(5) %>% html_table()
webpage %>% html_elements(".wikitable.sortable") %>% `[[`(2) %>% html_table()
webpage %>% html_elements(".wikitable.sortable") %>% `[[`(1) %>% html_table()
webpage %>% html_elements(".wikitable.sortable") %>% `[[`(2) %>% html_table()
webpage %>% html_elements(".wikitable.sortable") [[5]]
webpage %>% html_elements(".wikitable.sortable")
webpage %>% html_elements(".wikitable.sortable")%>% html_table()
webpage %>% html_elements(".wikitable.sortable") %>% html_table() %>% [[2]]
webpage %>% html_elements(".wikitable.sortable") %>% html_table() %>% `[[`(2)
url <- "https://www.bls.gov/mxp/"
webpage <- read_html(url)
library(rvest)
url <- "https://en.wikipedia.org/wiki/World_population"
res <- GET(url,
query=list(r_date="2023-06-23",
meeting_id=18))
webpage <- read_html(content(res, as="text"))
table = webpage %>%
html_elements(".wikitable.sortable") %>%
`[[`(2) %>% html_table()
url <- "https://www.bls.gov/mxp/"
res <- GET(url,
query=list(r_date="2023-06-23",
meeting_id=18))
webpage <- read_html(content(res, as="text"))
webpage
url <- "https://backlinko.com/iphone-users"
webpage <- read_html(url)
url <- "https://backlinko.com/iphone-users"
webpage <- read_html(url)
table = webpage %>%
html_elements(".table.table-primary.table-striped.table-hover") %>%
html_table()
table
url <- "https://backlinko.com/iphone-users"
webpage <- read_html(url)
table = webpage %>%
html_elements(".table.table-primary.table-striped.table-hover") %>%
html_table()  %>%
`[[`(1)
head(table)
url <- "https://backlinko.com/iphone-users"
webpage <- read_html(url)
table = webpage %>%
html_elements(".table.table-primary.table-striped.table-hover") %>%
html_table()  %>%
`[[`(1)
head(table)
url <- "https://en.wikipedia.org/wiki/World_population"
webpage <- read_html(url)
table = webpage %>%
html_elements(".wikitable.sortable") %>%
`[[`(2) %>% html_table()
head(table)
url <- "https://en.wikipedia.org/wiki/World_population"
webpage <- read_html(url)
table = webpage %>%
html_elements(".wikitable.sortable") %>%
`[[`(2) %>% html_table()
glimpse(table)
# Do reformatting on the columns to be actual numerics where appropriate
table %>%
mutate(Population=gsub(",","",Population)) %>%
mutate(Population=round(as.numeric(Population)/1e+06))  %>%
ggplot(aes(x=Country_Territory,y=Population)) + geom_point() +
labs(y = "Population / 1,000,000") + coord_flip() +
ggtitle("Top 10 Most Populous Countries")
# Do reformatting on the columns to be actual numerics where appropriate
table %>%
mutate(Population=gsub(",","",Population)) %>%
mutate(Population=round(as.numeric(Population)/1e+06))  %>%
ggplot(aes(x=`Country / Dependency`,y=Population)) + geom_point() +
labs(y = "Population / 1,000,000") + coord_flip() +
ggtitle("Top 10 Most Populous Countries")
as.numeric("17.7%")
table %>%
mutate(Percentage=gsub("%","",`Percentage  of the world`)) %>%
mutate(Percentage=as.numeric(Percentage)/1e+02))
t1 = table %>%
mutate(Percentage=gsub("%","",`Percentage  of the world`)) %>%
mutate(Percentage=as.numeric(Percentage)/1e+02)
t1$Percentage
table %>%
mutate(Percentage=gsub("%","",`Percentage  of the world`)) %>%
mutate(Percentage=as.numeric(Percentage)/1e+02)  %>%
ggplot(data, aes(x="", y=Percentage, fill=`Country / Dependency`)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0) +
ggtitle("Top 10 Most Populous Countries percentage")
table %>%
mutate(Percentage=gsub("%","",`Percentage  of the world`)) %>%
mutate(Percentage=as.numeric(Percentage)/1e+02)  %>%
ggplot(aes(x="", y=Percentage, fill=`Country / Dependency`)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0) +
ggtitle("Top 10 Most Populous Countries percentage")
t1 = table %>%
mutate(Percentage=gsub("%","",`Percentage  of the world`)) %>%
mutate(Percentage=as.numeric(Percentage)/1e+02) %>% select(Percentage, `Country / Dependency`)
?select
t1 = table %>%
mutate(Percentage=gsub("%","",`Percentage  of the world`)) %>%
mutate(Percentage=as.numeric(Percentage)/1e+02) %>% select(`Country / Dependency`,Percentage )
t1 = table %>%
mutate(Percentage=gsub("%","",`Percentage  of the world`)) %>%
mutate(Percentage=as.numeric(Percentage)/1e+02) %>% dplyr::select(`Country / Dependency`,Percentage )
t1 = table %>%
mutate(Percentage=gsub("%","",`Percentage  of the world`)) %>%
mutate(Percentage=as.numeric(Percentage)/1e+02) %>% dplyr::select(`Country / Dependency`,Percentage )
head(t1)
t1 = table %>%
mutate(Percentage=gsub("%","",`Percentage  of the world`)) %>%
mutate(Percentage=as.numeric(Percentage)/1e+02) %>% dplyr::select(`Country / Dependency`,Percentage )
head(t1)
#Now add others and remaining percentage
t2 = t1 %>% add_row(`Country / Dependency` = "others", Percentage = 1 - sum(t1$Percentage))
library(ggplot2)
library(ggrepel)
library(tidyverse)
# Get the positions
t2 <- t2 %>%
mutate(csum = rev(cumsum(rev(value))),
pos = value/2 + lead(csum, 1),
pos = if_else(is.na(pos), value/2, pos))
library(ggplot2)
library(ggrepel)
library(tidyverse)
# Get the positions
t2 <- t2 %>%
mutate(csum = rev(cumsum(rev(Percentage))),
pos = Percentage/2 + lead(csum, 1),
pos = if_else(is.na(pos), Percentage/2, pos))
ggplot(t2, aes(x = "" , y = Percentage, fill = fct(`Country / Dependency`) ) ) +
geom_col(width = 1, color = 1) +
coord_polar(theta = "y") +
scale_fill_brewer(palette = "Pastel1") +
geom_label_repel(data = t2,
aes(y = pos, label = paste0(value, "%")),
size = 4.5, nudge_x = 1, show.legend = FALSE) +
guides(fill = guide_legend(title = "Group")) +
theme_void()
library(ggplot2)
library(ggrepel)
library(tidyverse)
# Get the positions
t2 <- t2 %>%
mutate(csum = rev(cumsum(rev(Percentage))),
pos = Percentage/2 + lead(csum, 1),
pos = if_else(is.na(pos), Percentage/2, pos))
ggplot(t2, aes(x = "" , y = Percentage, fill = fct(`Country / Dependency`) ) ) +
geom_col(width = 1, color = 1) +
coord_polar(theta = "y") +
scale_fill_brewer(palette = "Pastel1") +
geom_label_repel(data = t2,
aes(y = pos, label = paste0(Percentage, "%")),
size = 4.5, nudge_x = 1, show.legend = FALSE) +
guides(fill = guide_legend(title = "Group")) +
theme_void()
cat("\60")
cat("\0060")
cat("\u0060")
knitr::include_graphics("5.png", dpi = 400)
knitr::include_graphics("6.png", dpi = 400)
url <- "https://coinmarketcap.com/all/views/all/"
bc <- read_html(url)
bc %>%
html_nodes('cmc-table__table-wrapper-outer') %>%
html_table()
bc %>%
html_nodes('.cmc-table__table-wrapper-outer') %>%
html_table()
url <- "https://coinmarketcap.com/all/views/all/"
bc <- read_html(url)
bc_table <- bc %>%
html_nodes('.cmc-table__table-wrapper-outer') %>%
html_table() %>% .[[3]]
# We get back a one element list that is a data frame
str(bc_table,0)
url <- "https://coinmarketcap.com/all/views/all/"
bc <- read_html(url)
bc_table <- bc %>%
html_nodes('.cmc-table__table-wrapper-outer') %>%
html_table() %>% .[[3]]
str(bc_table)
bc_table
url <- "https://coinmarketcap.com/all/views/all/"
bc <- read_html(url)
bc_table <- bc %>%
html_nodes('.cmc-table__table-wrapper-outer') %>%
html_table() %>% .[[3]]
str(bc_table[,: 1:10])
url <- "https://coinmarketcap.com/all/views/all/"
bc <- read_html(url)
bc_table <- bc %>%
html_nodes('.cmc-table__table-wrapper-outer') %>%
html_table() %>% .[[3]]
str(bc_table[,1:10])
# The data is "dirty" and has characers in it that need cleaning
bc_table <- bc_table %>% mutate(Price=gsub("\\$","",Price))
bc_table
url <- "https://coinmarketcap.com/all/views/all/"
bc <- read_html(url)
bc_table <- bc %>%
html_nodes('.cmc-table__table-wrapper-outer') %>%
html_table() %>% .[[3]]
bc_table = bc_table[,1:10]
str(bc_table)
bc_table
# The data is "dirty" and has characers in it that need cleaning
bc_table <- bc_table %>% mutate(Price=gsub("\\$","",Price))
bc_table <- bc_table %>% mutate(Price=gsub(",","",Price))
bc_table <- bc_table %>% mutate(Price=round(as.numeric(Price),2))
# There are four rows wherein the Price is missing NA
bc_table <- bc_table %>% filter(complete.cases(bc_table))
# Let's get the Crypto currencies with the Top 10 highest prices
top_10 <- bc_table %>% arrange(desc(Price)) %>% head(10)
top_10
# Next we want to make a barplot of the Top 10
ylim=c(0,max(top_10$Price)+10000)
main="Top 10 Crypto Currencies in Terms of Price"
bp <- barplot(top_10$Price,col="aquamarine",
ylim=ylim,main=main)
axis(1, at=bp, labels=top_10$Symbol,  cex.axis = 0.7)
grid()
# Next we want to make a barplot of the Top 10
ylim=c(0,max(top_10$Price)+10000)
main="Top 10 Crypto Currencies in Terms of Price"
bp <- barplot(top_10$Price,col="aquamarine",
ylim=ylim,main=main)
axis(1, at=bp, labels=top_10$Symbol,  cex.axis = 0.7)
grid()
# Let's take the log of the price
ylim=c(0,max(log(top_10$Price))+5)
main="Top 10 Crypto Currencies in Terms of log(Price)"
bp <- barplot(log(top_10$Price),col="aquamarine",
ylim=ylim,main=main)
axis(1, at=bp, labels=top_10$Symbol,  cex.axis = 0.7)
grid()
# Scrape the website for the movie rating
rating <- lego_movie %>%
html_nodes(xpath='//*[@id="__next"]/main/div/section[1]/section/div[3]/section/section/div[2]/div[2]/div/div[1]/a/span/div/div[2]/div[1]/span[1]')  %>%
#  html_nodes(".ratingValue span") %>%
html_text()
url <- "http://www.imdb.com/title/tt1490017/"
lego_movie <- read_html(url)
# Scrape the website for the movie rating
rating <- lego_movie %>%
html_nodes(xpath='//*[@id="__next"]/main/div/section[1]/section/div[3]/section/section/div[2]/div[2]/div/div[1]/a/span/div/div[2]/div[1]/span[1]')  %>%
#  html_nodes(".ratingValue span") %>%
html_text()
rating
knitr::include_graphics("7.png", dpi = 400)
knitr::include_graphics("9.jpg", dpi = 400)
xpath='//*[@id="__next"]/main/div/section[1]/section/div[3]/section/section/div[2]/div[2]/div/div[1]/a/span/div/div[2]/div[1]/span[1]'
rating <- lego_movie %>%
html_nodes(xpath = xpath)  %>%
html_text()
rating
xpath='//*[@id="__next"]/main/div/section[1]/section/div[3]/section/section/div[3]/div[2]/div[1]/section/p/span[3]'
mov_summary <- lego_movie %>%
html_nodes(xpath=xp) %>%
html_text()
xpath='//*[@id="__next"]/main/div/section[1]/section/div[3]/section/section/div[3]/div[2]/div[1]/section/p/span[3]'
mov_summary <- lego_movie %>%
html_nodes(xpath=xpath) %>%
html_text()
mov_summary
xpath='//*[@id="__next"]/main/div/section[1]/section/div[3]/section/section/div[3]/div[2]/div[1]/section/p/span[3]'
mov_summary <- lego_movie %>%
html_nodes(xpath=xpath) %>%
html_text()
cat(mov_summary)
library(renderthis)
to_pdf(from = "lecture26.html",complex_slides = TRUE)
library(renderthis)
to_pdf(from = "lecture25.html",complex_slides = TRUE)
