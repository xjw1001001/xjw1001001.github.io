knitr::opts_chunk$set(
comment = "",eval = TRUE,fig.retina = 2, message=F, warning = F, fig.height = 4.5
)
library(renderthis)
to_pdf(from = "lecture20.html",complex_slides = TRUE)
# Don't change anything here
knitr::opts_chunk$set(
comment = "", prompt = F, message=F, warning = F
)
knitr::include_graphics("p1.png")
knitr::include_graphics("p2.png")
knitr::include_graphics("p2.png")
dbinom(0, size = 4, p = 0.0918)
knitr::include_graphics("p3.png")
set.seed(123)
decisions <- rbinom(1500, 1, 0.6)
num_attend <- sum(decisions)
num_attend
p1 = population_2 |> ggplot(aes(x = length)) +
geom_histogram() +
geom_vline(aes(xintercept = mean(length)), size = 2, color = "blue")
library(ggplot2)
set.seed(2023)
male = data.frame(
length = rnorm(n=2000, mean = 57.5, sd = 3),
sex = rep("Male", 2000)
)
female = data.frame(
length = rnorm(n=3000, mean = 50.5, sd = 2.8),
sex = rep("Female", 3000)
)
population_2 = bind_rows(male,female)
library(ggplot2)
library(tidyverse)
set.seed(2023)
male = data.frame(
length = rnorm(n=2000, mean = 57.5, sd = 3),
sex = rep("Male", 2000)
)
female = data.frame(
length = rnorm(n=3000, mean = 50.5, sd = 2.8),
sex = rep("Female", 3000)
)
population_2 = bind_rows(male,female)
p1 = population_2 |> ggplot(aes(x = length)) +
geom_histogram() +
geom_vline(aes(xintercept = mean(length)), size = 2, color = "blue")
p1
?ggarrange
??ggarrange
ggplot(df, aes(x1, y1)) +
geom_point(size = 0.5, alpha = 0.5) +
geom_function(fun = f, colour = "red") +
labs(x = "x", y = "y", title = "Random Points and Function Curve")
n = 5000
x1 = runif(n, min =0 , max =1 )
y1 = runif(n, min =0 , max =1 )
df = data.frame(x1 = x1,y1= y1)
f <- function(x) ((sin(10*x^2))^2*sin(x))*x+0.1
ggplot(df, aes(x1, y1)) +
geom_point(size = 0.5, alpha = 0.5) +
geom_function(fun = f, colour = "red") +
labs(x = "x", y = "y", title = "Random Points and Function Curve")
ggplot(df, aes(x1, y1)) +
geom_point(size = 0.5, alpha = 0.5) +
geom_function(fun = f, colour = "red", lty = 2) +
labs(x = "x", y = "y", title = "Random Points and Function Curve")
ggplot(df, aes(x1, y1)) +
geom_point(size = 0.5, alpha = 0.5) +
geom_function(fun = f, colour = "red", size = 2) +
labs(x = "x", y = "y", title = "Random Points and Function Curve")
df
df |> mutate(f_x = f(x1))
df |>
mutate(f_x = f(x1)) |>
mutate(upper_than_fx = y1 > f_x) |>
ggplot(aes(x1, y1, color = upper_than_fx)) +
geom_point(size = 0.5, alpha = 0.5) +
geom_function(fun = f, colour = "red", size = 2) +
labs(x = "x", y = "y", title = "Random Points and Function Curve")
df1 = df |>
mutate(f_x = f(x1)) |>
mutate(upper_than_fx = y1 > f_x)
df1 |>
ggplot(aes(x1, y1, color = upper_than_fx)) +
geom_point(size = 0.5, alpha = 0.5) +
geom_function(fun = f, colour = "red", size = 2) +
labs(x = "x", y = "y", title = "Random Points and Function Curve") +
theme(legend.position = "none")
mean(df1$upper_than_fx)
1 - mean(df1$upper_than_fx)
n = 1000
x1 = runif(n, min =0 , max =1 )
y1 = runif(n, min =0 , max =1 )
df = data.frame(x1 = x1,y1= y1)
f <- function(x) ((sin(10*x^2))^2*sin(x))*x+0.1
integrate(f, lower = 0, upper = 1)
install.packages("emo")
devtools::install_github("hadley/emo")
knitr::opts_chunk$set(
comment = "",eval = TRUE,fig.retina = 2, message=F, warning = F, fig.height = 4.5
)
library(renderthis)
to_pdf(from = "lecture21.html",complex_slides = TRUE)
